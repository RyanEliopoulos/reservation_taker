#!/bin/bash


# Removes the carriage return inserted by windows
remove_carriage (){
	echo `echo $1 | sed 's/\r//g'`
}
	
format_date (){
	#formatted_date=`echo $1 | sed "s/\(.*\)\/\(.*\)\/\(.*\)/\1\2\3/g"`
	#echo $formatted_date | od -c
	echo $1 | sed "s/\(.*\)\/\(.*\)\/\(.*\)/\3\1\2/g"

}

screen_dates (){
	#sets variable today to current date in the same format as formatted departure and return dates
	today=`date +%y%m%d`
	echo "Departure date is $formatted_departure"
	echo "Arrival date is $formatted_return"
	echo "today is $today"
	if [[ $formatted_departure -le $formatted_return && $formatted_departure -gt $today ]]
	then
		echo "valid travel dates"
	else
		echo "invalid travel dates"
	fi	
}

passenger_name=`zenity --entry --title="Traveler Name" --text="What is the traveler's name?"`	#Prompts user to enter a name.  Can play with options
departure_date=`zenity --calendar --text="What is the departure date?"`
return_date=`zenity --calendar --text="What is the return date?"`


#Removes carriage returns
passenger_name=`remove_carriage $passenger_name`
departure_date=`remove_carriage $departure_date`
return_date=`remove_carriage $return_date`

#Formats dates for comparison
formatted_departure=`format_date $departure_date`
formatted_return=`format_date $return_date`

screen_dates


# use sed -n "/^$variable/p" to find out of an entry exists for that person. If so, use grep -v $variable > to write new file without that entry, then echo $variable >> reservations.txt to append the new scheduled trip.


# new idea: grep -v ^$variable reservations.txt temp.txt
# then copy temp.txt into reservations.txt to remove the reservation already under person's name.
# To append, use echo $reservation_info >> reservation.txt



#presence=`grep ^$test bullshit.txt`
#echo $presence

#if [[ $presence != '' ]]
#then
#	echo grep -v ^$test bullshit.txt
#else
#	echo "cheese balls"
#fi	
